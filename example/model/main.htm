<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Model加载示例</title>
    <script src="js/loader.js"></script>
    <script src="js/factory.js"></script>
</head>
<body>
    <script src="../../src/util.js"></script>
    <script src="../../src/assert.js"></script>
    <script src="../../src/Deferred.js"></script>
    <script src="../../src/Observable.js"></script>
    <script src="../../src/Model.js"></script>
    <h1>Model加载示例</h1>
    <p>本示例展示如何配置来完成Model数据的加载。</p>
    <h2>示例</h2>
    <div id="example">
        <ol id="log"></ol>
        <code><pre id="result"></pre></code>
    </div>
    <script>
        function log(text) {
            document.getElementById('log').innerHTML += '<li>' + text + '</li>';
        }

        var Model = require('Model');
        var model = new Model();
        model.datasource = [
            { zero: immediate(0) }, // 直接返回值
            {
                noUse: [ // 该key是没用的
                    { ten: delayed(200, 10) },
                    { eleven: delayed(300, 11) },
                    { twelve: delayed(400, 12) }
                ],
                thirteen: delayed(500, 13)
            },
            {
                one: delayed(400, 1),
                two: delayed(300, 2),
                three: delayed(700, 3),
                four: delayed(500, 4)
            },
            {
                stillOne: relied(400, 'one'),
                stillTwo: relied(300, 'two')
            },
            function() { // 返回一个对象展开到Model中
                return {
                    twenty: 20,
                    twentyOne: 21,
                    twentyTwo: 22
                }
            },
            {
                // 使用数据获取配置项指定key
                retrieve: function() { return 30; },
                key: 'thirty'
            }
        ];


        function dump() {
            var output = model.valueOf();
            var json = JSON.stringify(output, null, '    ');
            var util = require('util');
            document.getElementById('result').innerHTML = util.encodeHTML(json);
        }

        model.load().done(dump);
    </script>
</body>
</html>